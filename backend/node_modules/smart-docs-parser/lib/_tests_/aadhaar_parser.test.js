"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var aadhaar_parser_1 = __importDefault(require("../document-parser/aadhaar-parser"));
var aadhaar_parser_mock_1 = __importDefault(require("./aadhaar_parser.mock"));
test('Address parser should remove all the non-english text segments', function () {
    var parsedDetails = aadhaar_parser_1.default.parseDocumentDetails({
        raw_text: aadhaar_parser_mock_1.default.RAW_TEXTS.NON_ENGLISH
    });
    expect(parsedDetails).toMatchObject({
        is_document_valid: true,
        document_details: aadhaar_parser_mock_1.default.PARSED_DETAILS.NON_ENGLISH
    });
});
test('Address parser should mark address end at the first occurance of pin code', function () {
    var parsedDetails = aadhaar_parser_1.default.parseDocumentDetails({
        raw_text: aadhaar_parser_mock_1.default.RAW_TEXTS.FIRST_OCCURING_PIN_CODE
    });
    expect(parsedDetails).toMatchObject({
        is_document_valid: true,
        document_details: aadhaar_parser_mock_1.default.PARSED_DETAILS.FIRST_OCCURING_PIN_CODE
    });
});
test('Address parser should keep the address header starting with S/O, C/O, D/O etc.', function () {
    var parsedDetails = aadhaar_parser_1.default.parseDocumentDetails({
        raw_text: aadhaar_parser_mock_1.default.RAW_TEXTS.GUARDIAN_NAME_ADDRESS_HEADER
    });
    expect(parsedDetails).toMatchObject({
        is_document_valid: true,
        document_details: aadhaar_parser_mock_1.default.PARSED_DETAILS.GUARDIAN_NAME_ADDRESS_HEADER
    });
});
test('Address parser should remove the unwanted prefix or suffix noise from the address', function () {
    var parsedDetails = aadhaar_parser_1.default.parseDocumentDetails({
        raw_text: aadhaar_parser_mock_1.default.RAW_TEXTS.UNWANTED_PREFIX_SUFFIX
    });
    expect(parsedDetails).toMatchObject({
        is_document_valid: true,
        document_details: aadhaar_parser_mock_1.default.PARSED_DETAILS.UNWANTED_PREFIX_SUFFIX
    });
});
test('Address parser should return undefined address if the end line or start line of address is not identified', function () {
    var parsedDetails = aadhaar_parser_1.default.parseDocumentDetails({
        raw_text: aadhaar_parser_mock_1.default.RAW_TEXTS.UNDEFINED_ADDRESS
    });
    expect(parsedDetails).toMatchObject({
        is_document_valid: true,
        document_details: aadhaar_parser_mock_1.default.PARSED_DETAILS.UNDEFINED_ADDRESS
    });
});
test('Address parser should identify the end line of address by pin code, even if it is followed by some unwanted characters', function () {
    var parsedDetails = aadhaar_parser_1.default.parseDocumentDetails({
        raw_text: aadhaar_parser_mock_1.default.RAW_TEXTS.ADDRESS_END_LINE
    });
    expect(parsedDetails).toMatchObject({
        is_document_valid: true,
        document_details: aadhaar_parser_mock_1.default.PARSED_DETAILS.ADDRESS_END_LINE
    });
});
test('Address parser should identify the start line of address, even if it is first line of the raw text', function () {
    var parsedDetails = aadhaar_parser_1.default.parseDocumentDetails({
        raw_text: aadhaar_parser_mock_1.default.RAW_TEXTS.ADDRESS_START_LINE
    });
    expect(parsedDetails).toMatchObject({
        is_document_valid: true,
        document_details: aadhaar_parser_mock_1.default.PARSED_DETAILS.ADDRESS_START_LINE
    });
});
//# sourceMappingURL=aadhaar_parser.test.js.map